name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Format check
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-clippy-
      - name: Clippy
        run: cargo clippy -- --deny warnings

  build:
    name: build (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: aarch64-apple-darwin, os: macos-latest }
          # - { target: aarch64-pc-windows-gnu, os: ubuntu-latest }
          # - { target: aarch64-pc-windows-msvc, os: windows-latest }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: aarch64-unknown-linux-musl, os: ubuntu-latest }
          # - { target: arm-unknown-linux-gnueabi, os: ubuntu-latest }
          # - { target: arm-unknown-linux-gnueabihf, os: ubuntu-latest }
          # - { target: arm-unknown-linux-musleabi, os: ubuntu-latest }
          # - { target: arm-unknown-linux-musleabihf, os: ubuntu-latest }
          - { target: armv7-unknown-linux-gnueabi, os: ubuntu-latest }
          - { target: armv7-unknown-linux-gnueabihf, os: ubuntu-latest }
          - { target: armv7-unknown-linux-musleabi, os: ubuntu-latest }
          - { target: armv7-unknown-linux-musleabihf, os: ubuntu-latest }
          # - { target: i686-pc-windows-gnu, os: ubuntu-latest }
          # - { target: i686-pc-windows-msvc, os: windows-latest }
          # - { target: i686-unknown-linux-gnu, os: ubuntu-latest }
          # - { target: i686-unknown-linux-musl, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, os: macos-latest }
          - { target: x86_64-pc-windows-gnu, os: ubuntu-latest }
          - { target: x86_64-pc-windows-msvc, os: windows-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-latest }
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.job.target }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.job.target }}-cargo-build-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}
      - name: Install cross
        run: cargo install --force cross
        if: runner.os == 'Linux'
      - name: Build
        run: cargo build --locked --target=${{ matrix.job.target }}
        if: runner.os != 'Linux'
      - name: Build (cross)
        run: cross build --locked --target=${{ matrix.job.target }}
        if: runner.os == 'Linux'

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
      - name: Test
        run: cargo test --all-targets --all-features

  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install cargo-audit
        uses: taiki-e/install-action@f7958e862c501dedcb2f822574dfd2203a1d7e92 # v2.61.12
        with:
          tool: cargo-audit
      - name: Audit
        run: cargo audit
