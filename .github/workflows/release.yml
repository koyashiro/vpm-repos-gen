name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: write

jobs:
  release:
    name: release (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: aarch64-apple-darwin, os: macos-latest }
          # - { target: aarch64-pc-windows-gnu, os: ubuntu-latest }
          # - { target: aarch64-pc-windows-msvc, os: windows-latest }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: aarch64-unknown-linux-musl, os: ubuntu-latest }
          # - { target: arm-unknown-linux-gnueabi, os: ubuntu-latest }
          # - { target: arm-unknown-linux-gnueabihf, os: ubuntu-latest }
          # - { target: arm-unknown-linux-musleabi, os: ubuntu-latest }
          # - { target: arm-unknown-linux-musleabihf, os: ubuntu-latest }
          - { target: armv7-unknown-linux-gnueabi, os: ubuntu-latest }
          - { target: armv7-unknown-linux-gnueabihf, os: ubuntu-latest }
          - { target: armv7-unknown-linux-musleabi, os: ubuntu-latest }
          - { target: armv7-unknown-linux-musleabihf, os: ubuntu-latest }
          # - { target: i686-pc-windows-gnu, os: ubuntu-latest }
          # - { target: i686-pc-windows-msvc, os: windows-latest }
          # - { target: i686-unknown-linux-gnu, os: ubuntu-latest }
          # - { target: i686-unknown-linux-musl, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, os: macos-latest }
          - { target: x86_64-pc-windows-gnu, os: ubuntu-latest }
          - { target: x86_64-pc-windows-msvc, os: windows-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-latest }
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.job.target }}-cargo-build-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.job.target }}-cargo-build-release-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}
      - name: Install cross
        run: cargo install --force cross
        if: runner.os == 'Linux'
      - name: Build
        run: cargo build --locked --release --target=${{ matrix.job.target }}
        if: runner.os != 'Linux'
      - name: Build (cross)
        run: cross build --locked --release --target=${{ matrix.job.target }}
        if: runner.os == 'Linux'
      - name: Archive
        id: archive
        shell: bash
        run: |
          # Set $BIN_NAME
          case ${{ matrix.job.target }} in
            *-pc-windows-*) BIN_NAME_SUFFIX='.exe' ;;
            *) BIN_NAME_SUFFIX='' ;;
          esac
          BIN_NAME="vpm-repos-gen${BIN_NAME_SUFFIX}"

          cp "target/${{ matrix.job.target }}/release/${BIN_NAME}" .

          # Set $ARCHIVE_PATH
          RELEASE_VERSION="${GITHUB_REF#refs/tags/v}"
          ARCHIVE_BASENAME="vpm-repos-gen-${RELEASE_VERSION}-${{ matrix.job.target }}"
          case ${{ matrix.job.target }} in
            *-pc-windows-*) ARCHIVE_SUFFIX='.zip' ;;
            *) ARCHIVE_SUFFIX='.tar.gz' ;;
          esac
          ARCHIVE_PATH="${ARCHIVE_BASENAME}${ARCHIVE_SUFFIX}"

          # Create archive
          case ${{ matrix.job.target }} in
            *-pc-windows-*) 7z a "${ARCHIVE_PATH}" "${BIN_NAME}" LICENSE-APACHE LICENSE-MIT README.md ;;
            *) tar -czf "${ARCHIVE_PATH}" "${BIN_NAME}" LICENSE-APACHE LICENSE-MIT README.md ;;
          esac

          echo "ARCHIVE_PATH=${ARCHIVE_PATH}" >> "$GITHUB_ENV"
      - name: Publish release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          files: ${{ env.ARCHIVE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
